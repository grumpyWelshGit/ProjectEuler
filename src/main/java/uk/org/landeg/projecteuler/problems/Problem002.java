package uk.org.landeg.projecteuler.problems;

import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import uk.org.landeg.projecteuler.ProblemDescription;

@Component
@Order(2)
public class Problem002 implements ProblemDescription<Long>{
	@Override
	public String getTask() {
		return "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";
	}

	@Override
	public String getDescribtion() {
		return "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...";
	}

	@Override
	public Long solve() {
		int a = 1;
		int b = 2;
		int f = a;
		long sum = 0;
		boolean finished = false;

		do {
			if (f < 4000000) {
				if (f % 2 == 0) {
					sum += f;
				}
			} else {
				finished = true;
			}
			if (f < 2) {
				f += 1;
			} else {
				f = a +b;
				a = b;
				b = f;
			}
		} while (!finished);
		return sum;
		
	}
}

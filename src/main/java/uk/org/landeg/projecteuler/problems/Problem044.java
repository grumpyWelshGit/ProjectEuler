package uk.org.landeg.projecteuler.problems;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import uk.org.landeg.projecteuler.ProblemDescription;

@Order(44)
@Component
public class Problem044 implements ProblemDescription<Integer>{
	private static final Map<Integer, Integer> pentagons = new LinkedHashMap<>();
	private static final Logger LOG = LoggerFactory.getLogger(Problem044.class);

	@Override
	public String getTask() {
		return "Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?";
	}

	@Override
	public String getDescribtion() {
		return "Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2";
	}

	@Override
	public Integer solve() {
		final Set<Integer> p2values = new LinkedHashSet<>();
		final List<Integer> p2ValueList = new ArrayList<>();
		int n = 1;
		int p;
		do {
			p = n * (3*n-1);
			if (p > 20000000) {
				break;
			}
			LOG.trace("Adding pentagon number {} {}", n, p);
			p2values.add(p);
			p2ValueList.add(p);
			n++;
		} while (true);
		for (int idx = 0 ; idx < p2values.size() ; idx++) {
			for (int idx2 = idx + 1 ; idx2 < p2values.size() ; idx2++) {
				if (
					p2values.contains(p2ValueList.get(idx) + p2ValueList.get(idx2))
					&& p2values.contains(p2ValueList.get(idx2) - p2ValueList.get(idx))) {
						return (p2ValueList.get(idx2) - p2ValueList.get(idx)) / 2;
				}
			}
		}
		return null;
	}

}
